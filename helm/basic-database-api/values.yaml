# Default values for central-settlement.
# This is a YAML-formatted file.

# Declare global configurations
global:
  config:
    ## Pod scheduling preferences.
    ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
    ##
    affinity: {}

    ## Node labels for pod assignment
    ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
    nodeSelector: {}

    ## Set toleration for schedular
    ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
    tolerations: []

# Declare variables to be passed into your templates.
replicaCount: 1
image:
  repository: mdebarros/basic-database-api
  tag: v1.0.3
  pullPolicy: Always

readinessProbe:
  enabled: true
  httpGet:
    path: /users
  initialDelaySeconds: 60
  periodSeconds: 15

livenessProbe:
  enabled: false
  httpGet:
    path: /users
  initialDelaySeconds: 60
  periodSeconds: 15

config:
  ## DB Configuration
  # db_type can either be 'postgres' or 'mysql'. Ensure the correct DB is enabled and configured below: postgresql.enabled or mysql.enabled
  db_type: 'mysql'
  # db_driver can either be 'pg' or 'mysql'. Ensure the correct corresponding db_type above has been set.
  db_driver: 'mysql'
  db_host: '$release_name-user-database-mysql'
  db_port: 3306
  db_user: basic
  db_password: password
  db_database: user_database
  db_connection_pool_min: 10
  db_connection_pool_max: 30
  simple_routing_mode_enabled: true
  log_level: 'info'

init:
  enabled: true
  mysql:
    name: wait-for-mysql
    repository: mysql
    tag: latest
    pullPolicy: Always
    command: "until mysql -h $db_host -P $db_port -u $db_user --password=$db_password  $db_database   -e 'select version()' ; do echo waiting for MySQL; sleep 2; done;"
  migration:
    enabled: true
    name: run-migration
    command: npm run migrate
    config:
      run_data_migration: true

service:
  type: ClusterIP
  ports:
    api:
      name: http-api
      externalPort: 80
      internalPort: 3002

  annotations: {}

  # This allows one to point the service to an external backend.
  # This is useful for local development where one wishes to hijack
  # the communication from the service to the node layer and point
  # to a specific endpoint (IP, Port, etc).
  external:
    enabled: false
    # 10.0.2.2 is the magic IP for the host on virtualbox's network
    ip: 10.0.2.2
    ports:
      api:
        name: http-api
        externalPort: 3002

ingress:
  enabled: true
  externalPath: /
  # Used to create an Ingress record.
  hosts:
    api: basic-database-api.local
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: '/'
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  tls:
  # Secrets must be manually created in the namespace.
  # - secretName: chart-example-tls
  #   hosts:
  #     - chart-example.local
resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  # requests:
  #  cpu: 100m
#  memory: 128Mi

mysql:
  enabled: true
  nameOverride: "user-database-mysql"
  # Default values for Percona XtraDB Cluster

  ## percona image and version
  ## ref: https://hub.docker.com/r/percona/percona-xtradb-cluster/tags/
  image:
    repository: "percona/percona-xtradb-cluster"
    tag: "5.7.19"
    pullPolicy: Always

  # Desired number of members of xtradb cluster
  replicas: 1

  ## Specify password for root user
  ##
  # mysqlRootPassword: not-a-secure-password

  ## Specify password for xtradb backup user
  ##
  # xtraBackupPassword: replicate-my-data

  ## Uncomment to create a database user
  ##
  mysqlUser: basic
  mysqlPassword: password

  ## Allow unauthenticated access, uncomment to enable
  ##
  # mysqlAllowEmptyPassword: true

  ## Uncomment to Create a database
  ##
  mysqlDatabase: user_database

  ## hosts to allow root user access from
  # set to "127.0.0.1" to deny remote root.
  allowRootFrom: "%"

  ## Persist data to a persitent volume
  persistence:
    enabled: false
    ## percona data Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    # storageClass: "-"
    accessMode: ReadWriteOnce
    size: 8Gi

  ## Node labels for pod assignment
  ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}

  ## Pod annotations
  ## Ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  podAnnotations: {}

  ## Tolerations labels for pod assignment
  ## Allow the scheduling on tainted nodes (requires Kubernetes >= 1.6)
  ## Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []

  ## Configure resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ##
  # resources:
  #  requests:
  #    memory: 256Mi
  #    cpu: 100m

  ## Configure the following values below if required
  #   performance_schema=ON
  #   max_connections=999
  #   max_user_connections=999
  #   thread_cache_size=999
  configFiles:
    node.cnf: |+
      [mysqld]
      datadir=/var/lib/mysql
      default_storage_engine=InnoDB
      binlog_format=ROW
      innodb_flush_log_at_trx_commit  = 0
      innodb_flush_method             = O_DIRECT
      innodb_file_per_table           = 1
      innodb_autoinc_lock_mode=2
      bind_address = 0.0.0.0
      wsrep_slave_threads=2
      wsrep_cluster_address=gcomm://
      wsrep_provider=/usr/lib/galera3/libgalera_smm.so
      wsrep_cluster_name=galera
      wsrep_sst_method=xtrabackup-v2
      pxc_strict_mode=DISABLED
      max_connections=999
      max_user_connections=994
      thread_cache_size=999
  ## When set to true will create sidecar for `prom/mysqld-exporter`
  ## metrics exporting
  metricsExporter:
    enabled: true
    tag: v0.11.0

  ## When set to true will create sidecar to tail mysql log
  logTail: true

  service:
    type: ClusterIP
    port: 3306
    externalIPs: []
